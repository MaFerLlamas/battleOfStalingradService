package org.mariaavila.stalingrad.model;

import java.math.BigDecimal;
import javax.validation.Valid;
import javax.validation.constraints.*;

import org.springframework.data.annotation.Id;

/**
 * @author Maria Avila
 * Tank Object
 * The Id is autogenerated by the DB
 */
public class Tank   {
	
	@Id
	private String id;
	
    public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	private String name;

    private String color;

    private BigDecimal track;

    private BigDecimal roadWheel;

    private BigDecimal viewpoint;

    private BigDecimal turret;

    private BigDecimal sideArmor;

    private BigDecimal gun;

  public Tank name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Tank Name
   * @return name
   * example = "Soviet T-34", required = true, value = "Tank Name"
   * **/
  @NotNull
  @Size(max=50) 
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Tank color(String color) {
    this.color = color;
    return this;
  }

  /**
   * Tank Color, in Hex code, if is invalid color the default will green
   * example Green = "195828" 
   * 
   * @return color
  */

  @Size(max=15) 
  public String getColor() {
    return color;
  }

  public void setColor(String color) {
    this.color = color;
  }

  public Tank track(BigDecimal track) {
    this.track = track;
    return this;
  }

  /**
   * How easie to drive is the tank
   * minimum: 0
   * maximum: 1E+1
   * @return track
  */
  @NotNull
  @Valid
  @DecimalMin("0") @DecimalMax("1E+1") 
  public BigDecimal getTrack() {
    return track;
  }

  public void setTrack(BigDecimal track) {
    this.track = track;
  }

  public Tank roadWheel(BigDecimal roadWheel) {
    this.roadWheel = roadWheel;
    return this;
  }

  /**
   * How big is the tank wheels, the more can jump obstacles with better ease, but is slower
   * minimum: 0
   * maximum: 5
   * @return roadWheel
  */
  @NotNull
  @Valid
  @DecimalMin("0") @DecimalMax("5") 
  public BigDecimal getRoadWheel() {
    return roadWheel;
  }

  public void setRoadWheel(BigDecimal roadWheel) {
    this.roadWheel = roadWheel;
  }

  public Tank viewpoint(BigDecimal viewpoint) {
    this.viewpoint = viewpoint;
    return this;
  }

  /**
   * How wide is the vision of this tank (the more the better)
   * minimum: 0
   * maximum: 1E+1
   * @return viewpoint
  */
  @NotNull
  @Valid
@DecimalMin("0") @DecimalMax("1E+1") 
  public BigDecimal getViewpoint() {
    return viewpoint;
  }

  public void setViewpoint(BigDecimal viewpoint) {
    this.viewpoint = viewpoint;
  }

  public Tank turret(BigDecimal turret) {
    this.turret = turret;
    return this;
  }

  /**
   * How resistent is the turret of this tank (the more the better)
   * minimum: 0
   * maximum: 1E+1
   * @return turret
  */
  @NotNull
  @Valid
@DecimalMin("0") @DecimalMax("1E+1") 
  public BigDecimal getTurret() {
    return turret;
  }

  public void setTurret(BigDecimal turret) {
    this.turret = turret;
  }

  public Tank sideArmor(BigDecimal sideArmor) {
    this.sideArmor = sideArmor;
    return this;
  }

  /**
   * How hard is the side armor of this tank (the more the better)
   * minimum: 0
   * maximum: 1E+1
   * @return sideArmor
  */
  @NotNull
  @Valid
  @DecimalMin("0") @DecimalMax("1E+1") 
  public BigDecimal getSideArmor() {
    return sideArmor;
  }

  public void setSideArmor(BigDecimal sideArmor) {
    this.sideArmor = sideArmor;
  }

  public Tank gun(BigDecimal gun) {
    this.gun = gun;
    return this;
  }

  /**
   * How fast is the gun for shooting of this tank (the more the better)
   * minimum: 0
   * maximum: 1E+1
   * @return gun
  */

  @NotNull
  @Valid
  @DecimalMin("0") @DecimalMax("1E+1") 
  public BigDecimal getGun() {
    return gun;
  }

  public void setGun(BigDecimal gun) {
    this.gun = gun;
  }
}

